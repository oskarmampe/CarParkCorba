# Server.py
# The CounterPortable demo server program

# Standard/built-in modules.
import sys

# Omniorb modules.
from omniORB import CORBA, PortableServer

# COS Naming modules.
import CosNaming

# Stubs and skeletons generated by 'omniidl'.
#import PayStation,PayStation__POA


#class PayStationServer(PayStation__POA.PayStation) :
#
#    def __init__(self):
#        self
#
#    def method(self):
#        return self.name


def main(argv):    
    # Initialise the ORB.   
    orb = CORBA.ORB_init(sys.argv, CORBA.ORB_ID)

    # Initialise the POA.
    poa = orb.resolve_initial_references("RootPOA")

    # Create an instance of the server and get its reference
    # this will also implicitly activate the object in the POA
    ei = PayStationServer()
    eo = ei._this()

    # Initialise and activate the POA Manager
    poaManager = poa._get_the_POAManager()
    poaManager.activate()

    # Get a reference to the Naming service                 
    ns = orb.resolve_initial_references ("NameService");
    rootContext = ns._narrow(CosNaming.NamingContext)

    if rootContext == None : 
            print "Failed to narrow the root naming context"
            sys.exit(1)

    # bind the Count object in the Naming service
    paystationName =  [CosNaming.NameComponent("paystationName", "")]
    rootContext.rebind(paystationName, eo)

    print 'Server created and accepting requests...'

    # Start the event loop.
    orb.run()

if __name__ == '__main__':
    main()
